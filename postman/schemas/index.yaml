openapi: 3.0.0
info:
  description:
    A REST API for simulations and analysis of train traffic on the LEAG rail
    network. Create one of many component configurations,
    for example, for defining the interlocking, train schedules, and faults.
    You can't edit an already specified component configuration but can delete it
    if it's no longer connected to a simulation configuration.
    Simulation configurations hold connections to the component configuration.
    You could add connections to component configurations and remove it if it's not connected to a run.
    A run is the execution of the defined simulation.
    After deleting every run, you can delete the simulation configuration.
  title: BP2022-API1 API
  version: 1.0.0
servers:
  - url: /
security:
  - ApiKeyAuth: []
paths:
  /schedule:
    get:
      operationId: get_all_schedule_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get all schedules
            of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of schedules connected to a user.

    post:
      operationId: create_schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Schedule"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    type: string
                type: object
          description: Successfully created new schedule object
        "401":
          description: API token missing
      summary: Insert a new schedule. Returns the id of the configuration object.

  /schedule/{id}:
    delete:
      operationId: delete_schedule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted schedule
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete a schedule

    get:
      operationId: get_schedule
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a schedule.

  /component/fault-injection/schedule-blocked-fault:
    get:
      operationId: get_schedule_blocked_fault_configuration_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get the schedule-blocked-faul
            configuration of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of schedule-blocked-faul configurations connected to a user.

    post:
      operationId: create_schedule_blocked_fault_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleBlockedFaultConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description:
            Successfully created new schedule-blocked-faul configuration
            object
        "401":
          description: API token missing
      summary:
        Insert a new schedule-blocked-faul component. Returns the id of the
        configuration object.

  /component/fault-injection/schedule-blocked-fault/{id}:
    delete:
      operationId: delete_schedule_blocked_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted schedule-blocked-fault configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete a schedule-blocked-fault configuration.

    get:
      operationId: get_schedule_blocked_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleBlockedFaultConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a schedule-blocked-fault configuration.

  /component/fault-injection/track-blocked-fault:
    get:
      operationId: get_track_blocked_fault_configuration_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get the track-blocked-fault
            configuration of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of track-blocked-fault configurations connected to a user.

    post:
      operationId: create_track_blocked_fault_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrackBlockedFaultConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description:
            Successfully created new track-blocked-fault configuration
            object
        "401":
          description: API token missing
      summary:
        Insert a new track-blocked-fault component. Returns the id of the configuration
        object.

  /component/fault-injection/track-blocked-fault/{id}:
    delete:
      operationId: delete_track_blocked_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted track-blocked-fault configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete a track-blocked-fault configuration.

    get:
      operationId: get_track_blocked_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrackBlockedFaultConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a track-blocked-fault configuration.

  /component/fault-injection/track-speed-limit-fault:
    get:
      operationId: get_track_speed_limit_fault_configuration_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get the track-speed-limit-fault
            configuration of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of track-speed-limit-fault configurations connected to a user.

    post:
      operationId: create_track_speed_limit_fault_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrackSpeedLimitFaultConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description:
            Successfully created new track-speed-limit-fault configuration
            object
        "401":
          description: API token missing
      summary:
        Insert a new track-speed-limit-fault component. Returns the id of the
        configuration object.

  /component/fault-injection/track-speed-limit-fault/{id}:
    delete:
      operationId: delete_track_speed_limit_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted track-speed-limit-fault configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete a track-speed-limit-fault configuration.

    get:
      operationId: get_track_speed_limit_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrackSpeedLimitFaultConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a track-speed-limit-fault configuration.

  /component/fault-injection/train-prio-fault:
    get:
      operationId: get_train_prio_fault_configuration_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get the train-prio-fault
            configuration of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of train-prio-fault configurations connected to a user.

    post:
      operationId: create_train_prio_fault_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrainPrioFaultConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description: Successfully created new train-prio-fault configuration object
        "401":
          description: API token missing
      summary:
        Insert a new train-prio-fault component. Returns the id of the configuration
        object.

  /component/fault-injection/train-prio-fault/{id}:
    delete:
      operationId: delete_train_prio_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted train-prio-fault configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete a train-prio-fault configuration.

    get:
      operationId: get_train_prio_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainPrioFaultConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a train-prio-fault configuration.

  /component/fault-injection/train-speed-fault:
    get:
      operationId: get_train_speed_fault_configuration_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get the train-speed-fault
            configuration of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of train-speed-fault configurations connected to a user.

    post:
      operationId: create_train_speed_fault_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrainSpeedFaultConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description: Successfully created new train-speed-fault configuration object
        "401":
          description: API token missing
      summary:
        Insert a new train-speed-fault component. Returns the id of the configuration
        object.

  /component/fault-injection/train-speed-fault/{id}:
    delete:
      operationId: delete_train_speed_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted train-speed-fault configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete a train-speed-fault configuration.

    get:
      operationId: get_train_speed_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainSpeedFaultConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a train-speed-fault configuration.

  /component/fault-injection/platform-blocked-fault:
    get:
      operationId: get_train_platform_blocked_configuration_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get the platform-blocked-fault
            configuration of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of platform-blocked-fault configurations connected to a user.

    post:
      operationId: create_platform_blocked_fault_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlatformBlockedFaultConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description: Successfully created new platform-blocked-fault configuration object
        "401":
          description: API token missing
      summary:
        Insert a new platform-blocked-fault component. Returns the id of the configuration
        object.

  /component/fault-injection/platform-blocked-fault/{id}:
    delete:
      operationId: delete_platform_blocked_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted platform-blocked-fault configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete a platform-blocked-fault configuration.

    get:
      operationId: get_platform_blocked_fault_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformBlockedFaultConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a platform-blocked-fault configuration.

  /component/interlocking:
    get:
      operationId: get_interlocking_configuration_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get the interlocking
            configuration of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of interlocking configurations connected to a user.

    post:
      operationId: create_interlocking_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InterlockingConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description: Successfully created new interlocking configuration object
        "400":
          description: An interlocking configuration exists for this simulation already
        "401":
          description: API token missing
      summary:
        Insert a new interlocking component. Returns the id of the configuration
        object.

  /component/interlocking/{id}:
    delete:
      operationId: delete_interlocking_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted interlocking configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete an interlocking configuration.

    get:
      operationId: get_interlocking_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InterlockingConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a interlocking configuration.

  /component/spawner:
    get:
      operationId: get_spawner_configuration_ids
      parameters:
        - description:
            Specify id of simulation if you only want to get the spawner
            configuration of a single simulation
          in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation not found
      summary: Get ids of spawner configurations connected to a user.

    post:
      operationId: create_spawner_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpawnerConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description: Successfully created new spawner configuration object
        "400":
          description: An spawner configuration exists for this simulation already
        "401":
          description: API token missing
      summary:
        Insert a new spawner component. Returns the id of the configuration
        object.

  /component/spawner/{id}:
    delete:
      operationId: delete_spawner_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted spawner configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Delete a spawner configuration.

    get:
      operationId: get_spawner_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpawnerConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: Get all information about a spawner configuration.

  /run:
    get:
      operationId: get_all_run_id
      parameters:
        - in: query
          name: simulationId
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Simulation id not found
      summary: Get all ids of runs connected to a user and a simulation.

    post:
      operationId: create_run
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description: Successfully created and started a new run
        "401":
          description: API token missing
        "404":
          description: Simulation id not found
        "409":
          description: Run already exists with this id
      summary:
        Create a new run. Returns id connected to the run to get the results
        and status from.

  /run/{id}:
    delete:
      operationId: delete_run
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted simulation configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary:
        "Delete a run and the connected results. If the simulation is still\
        \ running, cancel it."

    get:
      operationId: get_run
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunStatus"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary: "Get all information about a run, including the progress."

  /simulation:
    get:
      operationId: get_all_simulation_id
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: uuid
                  type: string
                type: array
          description: Successful operation
        "401":
          description: API token missing
      summary: Get all ids of simulation configurations connected to a user.

    post:
      operationId: create_simulation_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulationConfiguration"
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    format: uuid
                    title: id
                    type: string
                type: object
          description: Successfully created new simulation configuration
        "401":
          description: API token missing
      summary:
        Create a new simulation. Returns id connected to the simulation to
        connect components or runs to it.

  /simulation/{id}:
    delete:
      operationId: delete_simulation_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "204":
          description: Deleted simulation configuration
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary:
        Delete a simulation configuration and every connected component and
        run.

    get:
      operationId: get_simulation_configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationConfiguration"
          description: Successful operation
        "401":
          description: API token missing
        "404":
          description: Id not found
      summary:
        "Get all information about a simulation, including the ids of connected\
        \ components and runs."

  /token:
    post:
      operationId: create_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenConfiguration"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          description: Successfully created new token
        "401":
          description: API token missing
        "403":
          description: No rights to execute this action
      summary:
        Create new token with specified permission specified in body if current
        user is admin

components:
  schemas:
    Token:
      type: object
    SimulationConfiguration:
      type: object
    InterlockingConfiguration:
      type: object
    SpawnerConfiguration:
      type: object
    TrainSpeedFaultConfiguration:
      type: object
    TrainPrioFaultConfiguration:
      type: object
    ScheduleBlockedFaultConfiguration:
      type: object
    TrackSpeedLimitFaultConfiguration:
      type: object
    TrackBlockedFaultConfiguration:
      type: object
    PlatformBlockedFaultConfiguration:
      type: object
    RunConfiguration:
      type: object
    RunStatus:
      type: object
    Schedule:
      type: object
    TokenConfiguration:
      properties:
        permission:
          title: permission
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: bp2022-ap1-api-key
      type: apiKey
